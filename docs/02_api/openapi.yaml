openapi: 3.0.3
info:
  title: Grand Tour Sochi - Public API
  version: 1.0.0
  description: |-
    Публичный API для каталога и бронирования услуг Grand Tour Sochi.
    Ключевые возможности:
    - Получение списка маршрутов и доступных слотов.
    - Создание и управление бронированиями (draft -> hold -> invoice).
    - Идемпотентность для всех мутирующих запросов через заголовок `Idempotency-Key`.
tags:
  - name: Catalog
    description: API для получения публичной информации о маршрутах и доступности.
  - name: Booking
    description: API для создания и управления бронированиями.

paths:
  /api/public/availability:
    get:
      tags:
        - Catalog
      summary: Получить доступные слоты для маршрута
      operationId: getAvailability
      parameters:
        - name: routeId
          in: query
          required: true
          schema:
            type: string
            format: uuid
          description: ID маршрута.
        - name: dateFrom
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: Начало периода в формате ISO 8601.
        - name: dateTo
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: Конец периода в формате ISO 8601.
      responses:
        "200":
          description: Список доступных слотов.
          content:
            application/json:
              schema:
                type: object
                properties:
                  slots:
                    type: array
                    items:
                      $ref: '#/components/schemas/SlotAvailable'
        "400":
          $ref: '#/components/responses/BadRequest'

  /api/booking/draft:
    post:
      tags:
        - Booking
      summary: Создать черновик бронирования
      description: Рассчитывает цену и создает бронирование в статусе `draft`.
      operationId: createDraftBooking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftRequest'
      responses:
        "201":
          description: Черновик успешно создан.
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookingId:
                    type: string
                    format: uuid
                  code:
                    type: string
                  state:
                    type: string
                    example: "draft"
        "400":
          $ref: '#/components/responses/BadRequest'
        "429":
          $ref: '#/components/responses/RateLimited'

  /api/booking/hold:
    post:
      tags:
        - Booking
      summary: Поставить бронирование на холд
      description: Переводит бронирование из `draft` в `hold` и резервирует места. Требует `Idempotency-Key`.
      operationId: placeBookingOnHold
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingId:
                  type: string
                  format: uuid
      responses:
        "200":
          description: Бронирование успешно поставлено на холд.
          headers:
            X-Idempotent:
              schema:
                type: string
                enum: [hit, stored]
          content:
            application/json:
              schema:
                type: object
                properties:
                  state:
                    type: string
                    example: "hold"
                  holdExpiresAt:
                    type: string
                    format: date-time
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/RateLimited'

  /api/booking/invoice:
    post:
      tags:
        - Booking
      summary: Выставить счет для бронирования
      description: Переводит бронирование из `hold` в `invoice`, генерирует PDF и возвращает ссылку на него. Требует `Idempotency-Key`.
      operationId: issueInvoiceForBooking
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingId:
                  type: string
                  format: uuid
      responses:
        "200":
          description: Счет успешно выставлен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceNumber:
                    type: string
                  pdfUrl:
                    type: string
                    format: uri
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'

components:
  schemas:
    SlotAvailable:
      type: object
      properties:
        slotId:
          type: string
          format: uuid
        startAt:
          type: string
          format: date-time
        endAt:
          type: string
          format: date-time
        capacityLeft:
          type: integer
          description: Количество оставшихся свободных мест.

    DraftRequest:
      type: object
      required: [slotId, qty, customer]
      properties:
        slotId:
          type: string
          format: uuid
        qty:
          type: integer
          minimum: 1
        customer:
          type: object
          required: [name, phone]
          properties:
            name:
              type: string
            phone:
              type: string
              description: "Номер телефона в любом формате, будет нормализован на сервере."

    ApiError:
      type: object
      properties:
        error:
          type: string
          description: Человекочитаемое описание ошибки.
        code:
          type: string
          description: Машиночитаемый код ошибки.
        details:
          type: object
          additionalProperties: true
        traceId:
          type: string
          format: uuid

  parameters:
    IdempotencyKey:
      name: Idempotency-Key
      in: header
      required: true
      schema:
        type: string
        format: uuid
      description: "Уникальный ключ для обеспечения идемпотентности запроса. Рекомендуется использовать UUID v4."

  responses:
    BadRequest:
      description: "Ошибка валидации. Подробности в теле ответа."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    NotFound:
      description: "Запрашиваемый ресурс не найден."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Conflict:
      description: "Конфликт состояния. Например, попытка зарезервировать уже занятый слот."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    RateLimited:
      description: "Превышен лимит запросов."
      headers:
        Retry-After:
          schema:
            type: integer
          description: "Количество секунд, через которое можно повторить запрос."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
