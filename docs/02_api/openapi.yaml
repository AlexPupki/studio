openapi: 3.0.3
info:
  title: Grand Tour Sochi - Public API
  version: 1.3.0
  description: |-
    Публичный API для каталога и бронирования услуг Grand Tour Sochi.
    Ключевые возможности:
    - Получение списка маршрутов и доступных слотов.
    - Создание и управление бронированиями (draft -> hold -> invoice).
    - Получение контента (страницы, посты блога).
    - Идемпотентность для всех мутирующих запросов через заголовок `Idempotency-Key`.
tags:
  - name: Catalog
    description: API для получения публичной информации о маршрутах и доступности.
  - name: Booking
    description: API для создания и управления бронированиями.
  - name: Content
    description: API для получения контента (страницы, посты).

paths:
  /api/public/availability:
    get:
      # ... (existing path)
  /api/booking/draft:
    post:
      # ... (existing path)
  /api/booking/hold:
    post:
      # ... (existing path)
  /api/booking/invoice:
    post:
      # ... (existing path)
  /api/booking/confirm:
    post:
      # ... (existing path)

  # New Content Endpoints
  /api/content/pages/{slug}:
    get:
      tags:
        - Content
      summary: Получить данные страницы по слагу
      operationId: getPageBySlug
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: Слаг страницы (например, 'about-us').
      responses:
        "200":
          description: Успешный ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        "404":
          $ref: '#/components/responses/NotFound'

  /api/content/posts:
    get:
      tags:
        - Content
      summary: Получить список постов блога
      operationId: getPosts
      parameters:
        - name: tag
          in: query
          schema:
            type: string
          description: Фильтр по слагу тега.
        - name: category
          in: query
          schema:
            type: string
          description: Фильтр по слагу категории.
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Список постов.
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
                      limit:
                        type: integer
                      offset:
                        type: integer

  /api/content/posts/{slug}:
    get:
      tags:
        - Content
      summary: Получить пост блога по слагу
      operationId: getPostBySlug
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: Слаг поста.
      responses:
        "200":
          description: Успешный ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "404":
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    # ... (existing schemas)

    # New Content Schemas
    Page:
      type: object
      properties:
        slug:
          type: string
        title:
          type: string
        seoMeta:
          type: object
        contentBlocks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              data:
                type: object
    Post:
      type: object
      properties:
        slug:
          type: string
        title:
          type: string
        excerpt:
          type: string
        imageUrl:
          type: string
          format: uri
        author:
          type: object
          properties:
            name:
              type: string
            avatarUrl:
              type: string
              format: uri
        publishedAt:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
        category:
          type: string
        contentHtml:
          type: string
    # ... (existing error schemas)

  # ... (existing parameters and responses)

    
